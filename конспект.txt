сегодня у меня прекрасное настроение потому что сегодня вторник а это значит что будет мой любимый кружок программирование
                                                     26 ноября
1.ПРОГРАММА-набор инструкций бля компьютера,которые позволЯют решить определенную задачу.
2package-представляет собой набор блоков кода, выполняющих похожие операции-например,форматирование строк или построение графических изображений
3Файлы GO почти всегда содержат одну или несколько директив import. каждый файл должен импортировать другие пакеты, чтобы использовать код содержащийся в этих пакетах.В программе указываем только те пакеты,которые нам действительно нужны,-то есть импортируем (import эти пакеты
4 программы Go должны соблюдать определенные правила ,чтобы не сбивать с толку компилятор.Если вы нарушаете одно из таких правил,компилятор выдаст сообщение об ошибке.
                                                                        3 декабря.Вызов функции
вызов функции-чтобы вызвать функцию введите имя функции (в данном случа Println) и пару круглых скобок.
Как и многие функции, Println может полуать 1 или несколько аргументов-значений,с которыми должна работать функция.Аргументы 
После того как пакет будет импортирован,вы смжете вызывать функции из этого пакета.Для этого укажте имя пакета.посьавтие точку и введите имя нужной фуекции
так как мы собираемся импортировать несколько пакетов то преходим на альернативный формат инструкции который позволяет перечислять в круглых скобках сразу несколько пакетов по одному имени пакетав строке
ПРи вызоые функции вам не нужно обмениваться с ней доп инфой.вы передаете Println одно или несколько значений и ожидаййте выво
д.но иногда програ должна взять функцию и получить от нее доп данные. Из за этого в большинстве языков программирования функции имеют возвращаемые  значения которпые вычесляются фукциями и возврощаются на сторону вызова
ЛОгические значения
логическе величины принимают всего 2 значения true и false.они особенно удобны в условных командах,в которых




МАтематические операторы и сравнкения-можно сравнить числа.оператор == что 2 значения равны (!=не равны)
<= проверяет что второе значение меньше или равно первому,>= наоборот
import "fmt"

func main() {
	fmt.Println(15897 + 1731)
	fmt.Println(15897 - 1731)
	fmt.Println(15897 * 1731)
	fmt.Println(15897 / 1731)

}
Значения в GO на разные типы,которые определяют для чего они могут использоваться.
Объявления переменных- послн того как переменной будет присвоено значение,вы сможте испольльзовать ее в любом контексте,где может использоваться исходное значение(смотри файл variable.go)
в одной команде можно присвоить значения сразу несольким переменным.Для этого перечислите имена переменных слева от=и такое же кол-ов значений в правой частит,разделяя их запаятыми
weight,height = 68.8, 181.3
елси значение перемонной известно заранее,можно объявить переменную и присворитть ей значение
если значение переменнной присваивается одновреиенно с ее объявлением,тип переменнорй в объявлении обычно не указывают.Тип значения,пррисвоеннрнр  переменнрой,будет считаться типом этой переменной 
 var age int
 age = 19
если переменная объявляетмся без присваивания значения,то она будет содержать нулевое значение для этого типа.Для числовых типов нулевое значение равно0
										ПРАВИЛО ВЫБОРА ИМЕН
1.Должно начинатся с большой буквы
2.Если имя пременной,функции или типа начинается с буквы верхнего регистра,оно считается экспртируемыс и может использоваться в других пакетах. Если нижнего то не эксопртируемые.
если ия состоит из нескольких слов,каждое слово после первого должно начинаться с буквы верхнего решгистра,и они ьдолжны следовать дру гза другом без разделенрия пробелами.Называется верблюжим регистром.i вместо index.
Тоько пременные,функции и типы,имена которыхнакчинаются с буквы врехнего ргистра,счситаются экспортируемыми,то есть доступными за пределами текущего пакета.
преобразования-Проблема решатс преобразованием значений одного типа к другому.Для этого следует указать тип,к которому должн обыть преобразовано значенпие,а за ним преобразуемое значение в скобках.
В результате преобразования вы получите новое значыенме нужногго типа.В следующем примере выводится результат вызова TypeOF для значения в целочисленной перменной,а потом результат вызова для того же значения после преобразхованитя к типу float64.





